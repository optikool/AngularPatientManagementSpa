{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppState",
            "id": "interface-AppState-5565632eb29c7567a57fa70f094de9e91e0a9b81b2c480ef5cdb40106e546693d88877d7c4b1f1fdd7c7b035cd54ba6f69802f1cfc99751fe2ca3d5f082e44b9",
            "file": "src/app/core/store/reducers/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n    ActionReducerMap,\r\n    MetaReducer\r\n  } from \"@ngrx/store\";\r\n  import { environment } from \"../../../../environments/environment\";\r\n\r\n  export interface AppState {}\r\n\r\n  export const reducers: ActionReducerMap<AppState> = {};\r\n\r\n  export const metaReducers: MetaReducer<AppState>[] = !environment.production\r\n    ? []\r\n    : [];\r\n  ",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "PatientProfile",
            "id": "interface-PatientProfile-0a2ae00678ab5a37c6278d1052cf0dc8733a73e4ee1522ee77fadf5ab2994583ac022204c10f4491c29a4d4b28a8484f3b890b828f4c682931b94ccb2cccb69a",
            "file": "src/app/core/types/patient.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PatientProfile {\r\n  id: number | null;\r\n  name: string;\r\n  street: string;\r\n  city: string;\r\n  state: string;\r\n  zipCode: string;\r\n  clinic: string;\r\n  description: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "city",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "clinic",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | null",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "street",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "zipCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PatientState",
            "id": "interface-PatientState-ab4d10db2d56c17179dcc7d747f212bc11c6829441a1de82b47fddf54107a1ecf4a6e367f8676121a4c6f3a0956a205ad53331a762c6d9fdb1ec312fda2e2967",
            "file": "src/app/core/store/patient/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createReducer, MetaReducer, on } from '@ngrx/store';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { PatientProfile } from '../../types/patient';\r\nimport * as fromPatientActions from './patient.actions';\r\n\r\nexport const patientStateFeatureKey = 'patientState';\r\n\r\nexport interface PatientState {\r\n  patients: PatientProfile[];\r\n  patient: PatientProfile;\r\n  error?: any;\r\n}\r\n\r\nexport const initialState: PatientState = {\r\n  patients: [],\r\n  patient: {\r\n    id: null,\r\n    name: '',\r\n    street: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    clinic: '',\r\n    description: '',\r\n  },\r\n  error: undefined\r\n};\r\n\r\nexport const reducers = createReducer(\r\n  initialState,\r\n  // on(fromPatientActions.loadPatients, (state: PatientState, action) => {\r\n  //   console.log('reducers loadPatients action: ', action);\r\n  //   console.log('reducers loadPatients state: ', state);\r\n  //   return {\r\n  //     ...state,\r\n  //     //patients: action.patients\r\n  //   }\r\n  // }),\r\n  on(fromPatientActions.loadPatientSuccess, (state: PatientState, action) => {\r\n    console.log('loadPatientSuccess state: ', state);\r\n    console.log('loadPatientSuccess action: ', action);\r\n    return {\r\n      ...state,\r\n      patient: action.patient\r\n    }\r\n  }),\r\n  on(fromPatientActions.loadPatientsSuccess, (state: PatientState, action) => {\r\n    console.log('loadPatientsSuccess state: ', state);\r\n    console.log('loadPatientsSuccess action: ', action);\r\n    return {\r\n      ...state,\r\n      patients: action.patients\r\n    }\r\n  }),\r\n  on(fromPatientActions.loadPatientsFailure, (state, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    }\r\n  }),\r\n  on(fromPatientActions.createPatientSuccess, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      patients: action.patients\r\n    }\r\n  }),\r\n  on(fromPatientActions.createPatientFailure, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    }\r\n  }),\r\n  on(fromPatientActions.updatePatientSuccess, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      patients: action.patients\r\n    }\r\n  }),\r\n  on(fromPatientActions.updatePatientFailure, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    }\r\n  }),\r\n  on(fromPatientActions.deletePatientSuccess, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      patients: action.patients\r\n    }\r\n  }),\r\n  on(fromPatientActions.deletePatientFailure, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    }\r\n  })\r\n);\r\n\r\nexport const metaReducers: MetaReducer<PatientState>[] = !environment.production ? [] : [];\r\n",
            "properties": [
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "patient",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PatientProfile",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "patients",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PatientProfile[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "PatientEffects",
            "id": "injectable-PatientEffects-f50e239debfb83d632383fc61f0df038098e9bad1a59235ca62669956c0cfc76d94403eeaafdcacba440e93d679e0dedae5eae173c7cd0d5adba10c920847c21",
            "file": "src/app/core/store/patient/patient.effects.ts",
            "properties": [
                {
                    "name": "createPatient$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\r\n    ofType(PatientActionTypes.CREATE_PATIENT),\r\n    mergeMap((patient: PatientProfile) => this.storeService.createPatient(patient)\r\n      .pipe(\r\n        map(patients => fromPatientActions.createPatientSuccess({patients})),\r\n        catchError(error => of(fromPatientActions.createPatientFailure({error})))\r\n      ))\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "deletePatient$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\r\n    ofType(PatientActionTypes.DELETE_PATIENT),\r\n    mergeMap((data) => this.storeService.deletePatient(data)\r\n      .pipe(\r\n        map(patients => fromPatientActions.deletePatientSuccess({patients})),\r\n        catchError(error => of(fromPatientActions.deletePatientFailure({error})))\r\n      ))\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "loadPatient$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\r\n    ofType(PatientActionTypes.LOAD_PATIENT),\r\n    mergeMap((action) => this.storeService.getPatient(action)\r\n      .pipe(\r\n        map(patient => fromPatientActions.loadPatientSuccess({patient})),\r\n        catchError(error => of(fromPatientActions.loadPatientFailure({error})))\r\n      )\r\n    )\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "loadPatients$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\r\n    ofType(PatientActionTypes.LOAD_PATIENTS),\r\n    mergeMap(() => this.storeService.getPatients()\r\n      .pipe(\r\n          mergeMap(patients => {\r\n            console.log('Load Patiends Effect: ', patients);\r\n            return [\r\n              fromPatientActions.loadPatientsSuccess({patients})\r\n            ];\r\n          }),\r\n          catchError(error => of(fromPatientActions.loadPatientsFailure({error})))\r\n      )\r\n    )\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "updatePatient$",
                    "defaultValue": "createEffect(() => this.actions$.pipe(\r\n    ofType(PatientActionTypes.UPDATE_PATIENT),\r\n    mergeMap((patient: PatientProfile) => this.storeService.updatePatient(patient)\r\n      .pipe(\r\n        map(patients => fromPatientActions.updatePatientSuccess({patients})),\r\n        catchError(error => of(fromPatientActions.updatePatientFailure({error})))\r\n      ))\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { PatientActionTypes }  from './patient.actions';\r\nimport * as fromPatientActions from './patient.actions';\r\nimport { StoreService } from '../../services/store.service';\r\nimport { of } from 'rxjs';\r\nimport { mergeMap, map, catchError, withLatestFrom, exhaustMap } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\nimport { PatientState } from './index';\r\nimport { selectPatients } from './patient.selectors';\r\nimport { PatientProfile } from '../../types/patient';\r\n\r\n@Injectable()\r\nexport class PatientEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private store$: Store<PatientState>,\r\n    private storeService: StoreService\r\n  ) {}\r\n\r\n  loadPatients$ = createEffect(() => this.actions$.pipe(\r\n    ofType(PatientActionTypes.LOAD_PATIENTS),\r\n    mergeMap(() => this.storeService.getPatients()\r\n      .pipe(\r\n          mergeMap(patients => {\r\n            console.log('Load Patiends Effect: ', patients);\r\n            return [\r\n              fromPatientActions.loadPatientsSuccess({patients})\r\n            ];\r\n          }),\r\n          catchError(error => of(fromPatientActions.loadPatientsFailure({error})))\r\n      )\r\n    )\r\n  ));\r\n\r\n  loadPatient$ = createEffect(() => this.actions$.pipe(\r\n    ofType(PatientActionTypes.LOAD_PATIENT),\r\n    mergeMap((action) => this.storeService.getPatient(action)\r\n      .pipe(\r\n        map(patient => fromPatientActions.loadPatientSuccess({patient})),\r\n        catchError(error => of(fromPatientActions.loadPatientFailure({error})))\r\n      )\r\n    )\r\n  ));\r\n\r\n  createPatient$ = createEffect(() => this.actions$.pipe(\r\n    ofType(PatientActionTypes.CREATE_PATIENT),\r\n    mergeMap((patient: PatientProfile) => this.storeService.createPatient(patient)\r\n      .pipe(\r\n        map(patients => fromPatientActions.createPatientSuccess({patients})),\r\n        catchError(error => of(fromPatientActions.createPatientFailure({error})))\r\n      ))\r\n  ));\r\n\r\n  updatePatient$ = createEffect(() => this.actions$.pipe(\r\n    ofType(PatientActionTypes.UPDATE_PATIENT),\r\n    mergeMap((patient: PatientProfile) => this.storeService.updatePatient(patient)\r\n      .pipe(\r\n        map(patients => fromPatientActions.updatePatientSuccess({patients})),\r\n        catchError(error => of(fromPatientActions.updatePatientFailure({error})))\r\n      ))\r\n  ));\r\n\r\n  deletePatient$ = createEffect(() => this.actions$.pipe(\r\n    ofType(PatientActionTypes.DELETE_PATIENT),\r\n    mergeMap((data) => this.storeService.deletePatient(data)\r\n      .pipe(\r\n        map(patients => fromPatientActions.deletePatientSuccess({patients})),\r\n        catchError(error => of(fromPatientActions.deletePatientFailure({error})))\r\n      ))\r\n  ));\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store$",
                        "type": "Store<PatientState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "storeService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store$",
                        "type": "Store<PatientState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "storeService",
                        "type": "StoreService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PatientService",
            "id": "injectable-PatientService-0a9972175de5fdf5a6cb621e668c253e4d76f65e747992d8248ea415dd5d99adf3e253b0e1cec79916c756d8af0f07fd864b5365db88a433156f47293cbf6e65",
            "file": "src/app/core/services/patient.service.ts",
            "properties": [
                {
                    "name": "payload",
                    "defaultValue": "[\n    {\n      id: 1,\n      name: 'Dedra Gettone',\n      street: '0 Sloan Court',\n      city: 'Birmingham',\n      state: 'Alabama',\n      zipCode: '35244',\n      clinic: 'tristique in tempus',\n      description: 'Curabitur in libero ut massa volutpat convallis.',\n    },\n    {\n      id: 2,\n      name: 'Cristy Durram',\n      street: '7287 Birchwood Hill',\n      city: 'Cincinnati',\n      state: 'Ohio',\n      zipCode: '45264',\n      clinic: 'vestibulum ac est',\n      description:\n        'Vivamus metus arcu, adipiscing molestie, hendrerit at, vulputate vitae, nisl. Aenean lectus. Pellentesque eget nunc.',\n    },\n    {\n      id: 3,\n      name: 'Jolynn Petraitis',\n      street: '07 Grayhawk Court',\n      city: 'Wichita',\n      state: 'Kansas',\n      zipCode: '67260',\n      clinic: 'vestibulum proin',\n      description:\n        'Integer non velit. Donec diam neque, vestibulum eget, vulputate ut, ultrices vel, augue.',\n    },\n    {\n      id: 4,\n      name: 'Gerardo Scurlock',\n      street: '3478 Waxwing Plaza',\n      city: 'Dallas',\n      state: 'Texas',\n      zipCode: '75379',\n      clinic: 'convallis morbi odio',\n      description:\n        'Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Duis faucibus accumsan odio. Curabitur convallis.',\n    },\n    {\n      id: 5,\n      name: 'Honoria Dubarry',\n      street: '8567 Walton Plaza',\n      city: 'Peoria',\n      state: 'Illinois',\n      zipCode: '61656',\n      clinic: 'lectus vestibulum quam',\n      description: 'Proin risus. Praesent lectus.',\n    },\n    {\n      id: 6,\n      name: 'Ilsa Schaben',\n      street: '9 Warbler Plaza',\n      city: 'San Jose',\n      state: 'California',\n      zipCode: '95118',\n      clinic: 'non ligula',\n      description:\n        'Duis mattis egestas metus. Aenean fermentum. Donec ut mauris eget massa tempor convallis.',\n    },\n    {\n      id: 7,\n      name: 'Sybyl Antal',\n      street: '15 Grasskamp Point',\n      city: 'Santa Monica',\n      state: 'California',\n      zipCode: '90405',\n      clinic: 'vestibulum ante',\n      description:\n        'Quisque porta volutpat erat. Quisque erat eros, viverra eget, congue eget, semper rutrum, nulla.',\n    },\n    {\n      id: 8,\n      name: 'Beatriz Morris',\n      street: '680 Morrow Alley',\n      city: 'Spring Hill',\n      state: 'Florida',\n      zipCode: '34611',\n      clinic: 'vestibulum ante',\n      description:\n        'Quisque arcu libero, rutrum ac, lobortis vel, dapibus at, diam.',\n    },\n    {\n      id: 9,\n      name: 'Salem Secker',\n      street: '563 Amoth Road',\n      city: 'Houston',\n      state: 'Texas',\n      zipCode: '77055',\n      clinic: 'turpis sed ante',\n      description:\n        'Nulla justo. Aliquam quis turpis eget elit sodales scelerisque. Mauris sit amet eros.',\n    },\n    {\n      id: 10,\n      name: 'Rubetta Kilshaw',\n      street: '7650 Pierstorff Junction',\n      city: 'Bloomington',\n      state: 'Indiana',\n      zipCode: '47405',\n      clinic: 'odio cras',\n      description:\n        'Morbi vel lectus in quam fringilla rhoncus. Mauris enim leo, rhoncus sed, vestibulum sit amet, cursus id, turpis. Integer aliquet, massa id lobortis convallis, tortor risus dapibus augue, vel accumsan tellus nisi eu orci.',\n    },\n    {\n      id: 11,\n      name: 'Hewet Kira',\n      street: '6388 Maple Alley',\n      city: 'Charlotte',\n      state: 'North Carolina',\n      zipCode: '28205',\n      clinic: 'curae mauris viverra',\n      description:\n        'Morbi vel lectus in quam fringilla rhoncus. Mauris enim leo, rhoncus sed, vestibulum sit amet, cursus id, turpis.',\n    },\n    {\n      id: 12,\n      name: 'Lowell Firmin',\n      street: '4 Reinke Crossing',\n      city: 'Pompano Beach',\n      state: 'Florida',\n      zipCode: '33064',\n      clinic: 'nibh in lectus',\n      description: 'Sed ante. Vivamus tortor.',\n    },\n    {\n      id: 13,\n      name: 'Ashlen Jurasek',\n      street: '78 Graedel Terrace',\n      city: 'Monticello',\n      state: 'Minnesota',\n      zipCode: '55565',\n      clinic: 'morbi a ipsum',\n      description:\n        'Nullam orci pede, venenatis non, sodales sed, tincidunt eu, felis. Fusce posuere felis sed lacus. Morbi sem mauris, laoreet ut, rhoncus aliquet, pulvinar sed, nisl.',\n    },\n    {\n      id: 14,\n      name: 'Devonna Grigore',\n      street: '9 Spenser Hill',\n      city: 'Lima',\n      state: 'Ohio',\n      zipCode: '45807',\n      clinic: 'ipsum dolor sit',\n      description:\n        'Praesent id massa id nisl venenatis lacinia. Aenean sit amet justo.',\n    },\n    {\n      id: 15,\n      name: 'Cobby Muselli',\n      street: '5 Dryden Park',\n      city: 'Monticello',\n      state: 'Minnesota',\n      zipCode: '55585',\n      clinic: 'nisi volutpat',\n      description: 'Morbi ut odio.',\n    },\n    {\n      id: 16,\n      name: 'Carly Blincko',\n      street: '13308 Summit Way',\n      city: 'Des Moines',\n      state: 'Iowa',\n      zipCode: '50315',\n      clinic: 'sit amet eleifend',\n      description:\n        'Aliquam sit amet diam in magna bibendum imperdiet. Nullam orci pede, venenatis non, sodales sed, tincidunt eu, felis.',\n    },\n    {\n      id: 17,\n      name: 'Anderea Scally',\n      street: '107 Ridge Oak Parkway',\n      city: 'Memphis',\n      state: 'Tennessee',\n      zipCode: '38197',\n      clinic: 'semper interdum mauris',\n      description:\n        'Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Etiam vel augue.',\n    },\n    {\n      id: 18,\n      name: 'Antonetta Beilby',\n      street: '669 Sullivan Circle',\n      city: 'Tallahassee',\n      state: 'Florida',\n      zipCode: '32309',\n      clinic: 'commodo vulputate',\n      description: 'Ut at dolor quis odio consequat varius.',\n    },\n    {\n      id: 19,\n      name: 'Emilia Piner',\n      street: '13 Kim Hill',\n      city: 'Dallas',\n      state: 'Texas',\n      zipCode: '75221',\n      clinic: 'nunc rhoncus',\n      description:\n        'Curabitur in libero ut massa volutpat convallis. Morbi odio odio, elementum eu, interdum eu, tincidunt in, leo. Maecenas pulvinar lobortis est.',\n    },\n    {\n      id: 20,\n      name: 'Claiborne di Rocca',\n      street: '71 Pearson Street',\n      city: 'Albuquerque',\n      state: 'New Mexico',\n      zipCode: '87140',\n      clinic: 'urna pretium',\n      description:\n        'Maecenas tristique, est et tempus semper, est quam pharetra magna, ac consequat metus sapien ut nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Mauris viverra diam vitae quam.',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PatientProfile[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methods": [
                {
                    "name": "loadPatients",
                    "args": [],
                    "optional": false,
                    "returnType": "PatientProfile[]",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openModalDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { PatientProfile } from '../types/patient';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PatientService {\n  constructor() {}\n\n  loadPatients(): PatientProfile[] {\n    return this.payload;\n  }\n\n  openModalDialog(): Observable<any> {\n    return of('NONE');\n  }\n\n  payload: PatientProfile[] = [\n    {\n      id: 1,\n      name: 'Dedra Gettone',\n      street: '0 Sloan Court',\n      city: 'Birmingham',\n      state: 'Alabama',\n      zipCode: '35244',\n      clinic: 'tristique in tempus',\n      description: 'Curabitur in libero ut massa volutpat convallis.',\n    },\n    {\n      id: 2,\n      name: 'Cristy Durram',\n      street: '7287 Birchwood Hill',\n      city: 'Cincinnati',\n      state: 'Ohio',\n      zipCode: '45264',\n      clinic: 'vestibulum ac est',\n      description:\n        'Vivamus metus arcu, adipiscing molestie, hendrerit at, vulputate vitae, nisl. Aenean lectus. Pellentesque eget nunc.',\n    },\n    {\n      id: 3,\n      name: 'Jolynn Petraitis',\n      street: '07 Grayhawk Court',\n      city: 'Wichita',\n      state: 'Kansas',\n      zipCode: '67260',\n      clinic: 'vestibulum proin',\n      description:\n        'Integer non velit. Donec diam neque, vestibulum eget, vulputate ut, ultrices vel, augue.',\n    },\n    {\n      id: 4,\n      name: 'Gerardo Scurlock',\n      street: '3478 Waxwing Plaza',\n      city: 'Dallas',\n      state: 'Texas',\n      zipCode: '75379',\n      clinic: 'convallis morbi odio',\n      description:\n        'Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Duis faucibus accumsan odio. Curabitur convallis.',\n    },\n    {\n      id: 5,\n      name: 'Honoria Dubarry',\n      street: '8567 Walton Plaza',\n      city: 'Peoria',\n      state: 'Illinois',\n      zipCode: '61656',\n      clinic: 'lectus vestibulum quam',\n      description: 'Proin risus. Praesent lectus.',\n    },\n    {\n      id: 6,\n      name: 'Ilsa Schaben',\n      street: '9 Warbler Plaza',\n      city: 'San Jose',\n      state: 'California',\n      zipCode: '95118',\n      clinic: 'non ligula',\n      description:\n        'Duis mattis egestas metus. Aenean fermentum. Donec ut mauris eget massa tempor convallis.',\n    },\n    {\n      id: 7,\n      name: 'Sybyl Antal',\n      street: '15 Grasskamp Point',\n      city: 'Santa Monica',\n      state: 'California',\n      zipCode: '90405',\n      clinic: 'vestibulum ante',\n      description:\n        'Quisque porta volutpat erat. Quisque erat eros, viverra eget, congue eget, semper rutrum, nulla.',\n    },\n    {\n      id: 8,\n      name: 'Beatriz Morris',\n      street: '680 Morrow Alley',\n      city: 'Spring Hill',\n      state: 'Florida',\n      zipCode: '34611',\n      clinic: 'vestibulum ante',\n      description:\n        'Quisque arcu libero, rutrum ac, lobortis vel, dapibus at, diam.',\n    },\n    {\n      id: 9,\n      name: 'Salem Secker',\n      street: '563 Amoth Road',\n      city: 'Houston',\n      state: 'Texas',\n      zipCode: '77055',\n      clinic: 'turpis sed ante',\n      description:\n        'Nulla justo. Aliquam quis turpis eget elit sodales scelerisque. Mauris sit amet eros.',\n    },\n    {\n      id: 10,\n      name: 'Rubetta Kilshaw',\n      street: '7650 Pierstorff Junction',\n      city: 'Bloomington',\n      state: 'Indiana',\n      zipCode: '47405',\n      clinic: 'odio cras',\n      description:\n        'Morbi vel lectus in quam fringilla rhoncus. Mauris enim leo, rhoncus sed, vestibulum sit amet, cursus id, turpis. Integer aliquet, massa id lobortis convallis, tortor risus dapibus augue, vel accumsan tellus nisi eu orci.',\n    },\n    {\n      id: 11,\n      name: 'Hewet Kira',\n      street: '6388 Maple Alley',\n      city: 'Charlotte',\n      state: 'North Carolina',\n      zipCode: '28205',\n      clinic: 'curae mauris viverra',\n      description:\n        'Morbi vel lectus in quam fringilla rhoncus. Mauris enim leo, rhoncus sed, vestibulum sit amet, cursus id, turpis.',\n    },\n    {\n      id: 12,\n      name: 'Lowell Firmin',\n      street: '4 Reinke Crossing',\n      city: 'Pompano Beach',\n      state: 'Florida',\n      zipCode: '33064',\n      clinic: 'nibh in lectus',\n      description: 'Sed ante. Vivamus tortor.',\n    },\n    {\n      id: 13,\n      name: 'Ashlen Jurasek',\n      street: '78 Graedel Terrace',\n      city: 'Monticello',\n      state: 'Minnesota',\n      zipCode: '55565',\n      clinic: 'morbi a ipsum',\n      description:\n        'Nullam orci pede, venenatis non, sodales sed, tincidunt eu, felis. Fusce posuere felis sed lacus. Morbi sem mauris, laoreet ut, rhoncus aliquet, pulvinar sed, nisl.',\n    },\n    {\n      id: 14,\n      name: 'Devonna Grigore',\n      street: '9 Spenser Hill',\n      city: 'Lima',\n      state: 'Ohio',\n      zipCode: '45807',\n      clinic: 'ipsum dolor sit',\n      description:\n        'Praesent id massa id nisl venenatis lacinia. Aenean sit amet justo.',\n    },\n    {\n      id: 15,\n      name: 'Cobby Muselli',\n      street: '5 Dryden Park',\n      city: 'Monticello',\n      state: 'Minnesota',\n      zipCode: '55585',\n      clinic: 'nisi volutpat',\n      description: 'Morbi ut odio.',\n    },\n    {\n      id: 16,\n      name: 'Carly Blincko',\n      street: '13308 Summit Way',\n      city: 'Des Moines',\n      state: 'Iowa',\n      zipCode: '50315',\n      clinic: 'sit amet eleifend',\n      description:\n        'Aliquam sit amet diam in magna bibendum imperdiet. Nullam orci pede, venenatis non, sodales sed, tincidunt eu, felis.',\n    },\n    {\n      id: 17,\n      name: 'Anderea Scally',\n      street: '107 Ridge Oak Parkway',\n      city: 'Memphis',\n      state: 'Tennessee',\n      zipCode: '38197',\n      clinic: 'semper interdum mauris',\n      description:\n        'Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Etiam vel augue.',\n    },\n    {\n      id: 18,\n      name: 'Antonetta Beilby',\n      street: '669 Sullivan Circle',\n      city: 'Tallahassee',\n      state: 'Florida',\n      zipCode: '32309',\n      clinic: 'commodo vulputate',\n      description: 'Ut at dolor quis odio consequat varius.',\n    },\n    {\n      id: 19,\n      name: 'Emilia Piner',\n      street: '13 Kim Hill',\n      city: 'Dallas',\n      state: 'Texas',\n      zipCode: '75221',\n      clinic: 'nunc rhoncus',\n      description:\n        'Curabitur in libero ut massa volutpat convallis. Morbi odio odio, elementum eu, interdum eu, tincidunt in, leo. Maecenas pulvinar lobortis est.',\n    },\n    {\n      id: 20,\n      name: 'Claiborne di Rocca',\n      street: '71 Pearson Street',\n      city: 'Albuquerque',\n      state: 'New Mexico',\n      zipCode: '87140',\n      clinic: 'urna pretium',\n      description:\n        'Maecenas tristique, est et tempus semper, est quam pharetra magna, ac consequat metus sapien ut nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Mauris viverra diam vitae quam.',\n    },\n  ];\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "StoreService",
            "id": "injectable-StoreService-437b4d2ee4a0312891959ae5221807574976e94a8c4616a508a65cb4f11a62474d83a45bcacc4c1c6540db85da3b63a3980849c89e32a748319f95ddb4297c73",
            "file": "src/app/core/services/store.service.ts",
            "properties": [
                {
                    "name": "availablePatientId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "patients",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PatientProfile[]",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createPatient",
                    "args": [
                        {
                            "name": "patient",
                            "type": "PatientProfile",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PatientProfile[]>",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "patient",
                            "type": "PatientProfile",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deletePatient",
                    "args": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PatientProfile[]>",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPatient",
                    "args": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PatientProfile>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPatients",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<PatientProfile[]>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updatePatient",
                    "args": [
                        {
                            "name": "data",
                            "type": "PatientProfile",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<PatientProfile[]>",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "PatientProfile",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { PatientProfile } from '../types/patient';\nimport { PatientService } from './patient.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoreService {\n  private patients: PatientProfile[] = [];\n  private availablePatientId = 0;\n\n  constructor(\n    private patientService: PatientService\n  ) { }\n\n  getPatient(action: { id: number, type: string }): Observable<PatientProfile> {\n    const patient = this.patients.find((patient: PatientProfile) => action.id === patient.id);\n\n    if (patient) {\n      return of({\n        ...patient\n      });\n    } else {\n      return throwError(() => 'Patient not found');\n    }\n  }\n\n  getPatients(): Observable<PatientProfile[]> {\n    this.patients = this.patientService.loadPatients();\n    this.availablePatientId = this.patients.length;\n\n    if (this.patients.length > 0) {\n      return of(this.patients);\n    } else {\n      return throwError(() => 'No Patients found');\n    }\n  }\n\n  createPatient(patient: PatientProfile): Observable<PatientProfile[]> {\n    console.log('createPatient patient: ', patient);\n    const newPatient = {\n      ...patient,\n      id: this.availablePatientId\n    };\n\n    this.availablePatientId++;\n\n    this.patients = this.patients.concat(newPatient);\n    return of(this.patients);\n  }\n\n  updatePatient(data: PatientProfile): Observable<PatientProfile[]> {\n      this.patients = this.patients.map((patient => {\n        if (data.id !== patient.id) return patient;\n        return {\n          ...patient,\n          ...data\n        }\n      }));\n\n      return of(this.patients);\n  }\n\n  deletePatient(data: { id: number, type: string}): Observable<PatientProfile[]> {\n    this.patients = this.patients.filter((patient: PatientProfile) => patient.id !== data.id);\n\n      return of(this.patients);\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "patientService",
                        "type": "PatientService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "patientService",
                        "type": "PatientService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "PatientListResolver",
            "id": "injectable-PatientListResolver-319ce2ad2a8072441fc388027b174c4319ae670b7d7b344a9c0b685f5d495ba505d55893038d53e6adced10dba27a98458c1b2c8e6359f25cba7916ee2b49305",
            "file": "src/app/views/patient-list/patient-list.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\nimport * as fromActions from '../../core/store/patient/patient.actions';\nimport { PatientState } from '../../core/store/patient';\nimport { selectPatients } from '../../core/store/patient/patient.selectors';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientListResolver implements Resolve<string> {\n  constructor(\n    private readonly store: Store<PatientState>\n  ) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<string> {\n    this.store.dispatch(fromActions.loadPatients());\n    return of('NONE');\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<PatientState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<PatientState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-88b6afdc90c960e4834a75d043a8d891dc75e738642fef5b185661e7a70ce73e572b2547f1a76080031f3bc7e5f32a9899ffcdaa6f3c688d299e68629293cd5f",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'patient-management-spa'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'patient-management-spa';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-header></app-header>\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-55c6621aba0e1f772861433ba5b4b7733559a3480ada45ebfa5971bf8d3cc6be8e218bef13ad3a9f7975aee0e954d685baaf546b381acb2b8c78c2b63103bec7",
            "file": "src/app/shared/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "loadNewProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n  loadNewProfile(): void {\n    console.log('loadNewProfile was called');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header-spacer {\r\n  flex: 1 1 auto;\r\n}\r\n\r\n.mat-icon {\r\n  font-size: 40px;\r\n  width: 40px;\r\n  height: 40px;\r\n  vertical-align: bottom;\r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\n  <span><mat-icon>group</mat-icon> Patients</span>\n  <span class=\"header-spacer\"></span>\n  <button mat-raised-button (click)=\"loadNewProfile()\">\n    Create Patient\n  </button>\n</mat-toolbar>\n"
        },
        {
            "name": "PatientCardComponent",
            "id": "component-PatientCardComponent-8f569cdc5f1f79946a2121fee859a0cfe0d381e7ee345a1b48359d5786253e4b43f092c5413949c21b5da43c17d9f51c0bb9a11c9b7f0fc849af938ad9e9b763",
            "file": "src/app/core/components/patient-card/patient-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-patient-card",
            "styleUrls": [
                "./patient-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./patient-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isFullProfile",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "patientProfile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "PatientProfile",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "loadProfile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { PatientProfile } from '../../types/patient';\n\n@Component({\n  selector: 'app-patient-card',\n  templateUrl: './patient-card.component.html',\n  styleUrls: ['./patient-card.component.scss'],\n})\nexport class PatientCardComponent implements OnInit {\n  @Input() public patientProfile: PatientProfile;\n  @Input() public isFullProfile = true;\n\n  \n  constructor() {\n    this.patientProfile = {\n      id: 0,\n      name: '',\n      street: '',\n      city: '',\n      state: '',\n      zipCode: '',\n      clinic: '',\n      description: '',\n    };\n  }\n\n  ngOnInit(): void {}\n\n  loadProfile(): void {\n    console.log('loadProfile called id: ', this.patientProfile.id);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.patient-card {\r\n  max-width: 400px;\r\n\r\n  .mat-card-title {\r\n    margin-bottom: 0;\r\n    display: inline-flex;\r\n    line-height: 1.3;\r\n\r\n    &:hover {\r\n      color:darkgray;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .mat-icon {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n\r\n  .mat-card-content {\r\n    display: block;\r\n    margin-bottom: 16px;\r\n    margin-top: 10px;\r\n    border-top: 1px solid lightgray;\r\n    padding-top: 20px;\r\n\r\n    .patient-card-label {\r\n      font-weight: bold;\r\n    }\r\n\r\n    .patient-card-address {\r\n      margin-bottom: 5px;\r\n\r\n      div {\r\n        .street {\r\n          padding: 0 16px 0 0 !important;\r\n        }\r\n      }\r\n    }\r\n\r\n    .patient-card-description {\r\n      margin-top: 5px;\r\n    }\r\n  }\r\n}\r\n\r\n::ng-deep .mat-card-header-text {\r\n  margin: 0 16px 0 0 !important;\r\n}\r\n",
                    "styleUrl": "./patient-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card class=\"patient-card\">\n  <mat-card-header>\n    <mat-card-title (click)=\"loadProfile()\"><mat-icon>account_circle</mat-icon>{{patientProfile.name}}</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <div fxLayout=\"row\" class=\"patient-card-address\">\n      <mat-label class=\"patient-card-label\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" fxLayoutGap=\"16px grid\">Address: </mat-label>\n      <div fxFlex=\"50%\" fxLayoutGap=\"16px grid\">\n        <div class=\"street\">{{patientProfile.street}}</div>\n        <div class=\"city-state-zip\">{{patientProfile.city}}, {{patientProfile.state}} {{patientProfile.zipCode}}</div>\n      </div>\n    </div>\n    <div fxLayout=\"row\" class=\"patient-card-clinic\">\n      <mat-label class=\"patient-card-label\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" fxLayoutGap=\"16px grid\">Associated Clinic: </mat-label>\n      <div class=\"clinic\">{{patientProfile.clinic}}</div>\n    </div>\n    <div fxLayout=\"row\" class=\"patient-card-description\" *ngIf=\"isFullProfile\">\n      <mat-label class=\"patient-card-label\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" fxLayoutGap=\"16px grid\">Description: </mat-label>\n      <div fxFlex=\"50%\" fxLayoutGap=\"16px grid\">\n        {{patientProfile.description}}\n      </div>\n    </div>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "PatientFormComponent",
            "id": "component-PatientFormComponent-b530a3bd2439f9fac139c5e479c8768efb22eee760b7c8b74a17be625b49957358975dd802ef511138930ee2836c0f15804517a40908059e401df0626176d226",
            "file": "src/app/core/components/forms/patient-form/patient-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-patient-form",
            "styleUrls": [
                "./patient-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./patient-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isNew",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "patientProfile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "PatientProfile",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "controlsConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PatientProfile",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "createUpdate",
                    "defaultValue": "this.isNew ? 'Create' : 'Update'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "registerForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PatientProfile } from 'src/app/core/types/patient';\n\n@Component({\n  selector: 'app-patient-form',\n  templateUrl: './patient-form.component.html',\n  styleUrls: ['./patient-form.component.scss'],\n})\nexport class PatientFormComponent implements OnInit {\n  @Input() public patientProfile: PatientProfile;\n  @Input() public isNew: boolean = false;\n\n  public controlsConfig: PatientProfile;\n  public registerForm: FormGroup;\n  public createUpdate: string = this.isNew ? 'Create' : 'Update';\n\n  constructor(private formBuilder: FormBuilder) {\n    this.registerForm = this.formBuilder.group({\n      id: [''],\n      name: ['', Validators.required],\n      street: ['', Validators.required],\n      city: ['', Validators.required],\n      state: ['', Validators.required],\n      zipCode: ['', Validators.required],\n      clinic: [''],\n      description: [''],\n    });\n\n    this.controlsConfig = {\n      id: null,\n      name: '',\n      street: '',\n      city: '',\n      state: '',\n      zipCode: '',\n      clinic: '',\n      description: '',\n    };\n\n    this.patientProfile = {\n      id: null,\n      name: '',\n      street: '',\n      city: '',\n      state: '',\n      zipCode: '',\n      clinic: '',\n      description: '',\n    };\n  }\n\n  ngOnInit(): void {\n    this.controlsConfig = {\n      id: this.patientProfile.id,\n      name: this.patientProfile.name,\n      street: this.patientProfile.street,\n      city: this.patientProfile.city,\n      state: this.patientProfile.state,\n      zipCode: this.patientProfile.zipCode,\n      clinic: this.patientProfile.clinic,\n      description: this.patientProfile.description,\n    };\n    console.log('this.patientProfile: ', this.patientProfile);\n    console.log('this.controlsConfig: ', this.controlsConfig);\n    this.registerForm.reset(this.controlsConfig);\n  }\n\n  onSubmit(): void {\n    if (this.registerForm.invalid) {\n      return;\n    }\n  }\n\n  onCancel(): void {}\n\n  get f() {\n    return this.registerForm && this.registerForm.controls;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".mat-card {\r\n  max-width: 680px;\r\n\r\n  .mat-card-title {\r\n    margin-bottom: 0;\r\n    display: inline-flex;\r\n    line-height: 1.3;\r\n\r\n    .mat-icon {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n\r\n  .mat-card-content {\r\n    margin-bottom: 16px;\r\n    margin-top: 10px;\r\n    border-top: 1px solid lightgray;\r\n  }\r\n\r\n  .patient-form-row {\r\n    margin: 20px 0;\r\n\r\n    .group {\r\n      margin: 0 0 20px 0 !important;\r\n\r\n      &:last-child {\r\n        margin: 0 !important;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n::ng-deep .mat-grid-tile-content {\r\n  justify-content: left !important;\r\n}\r\n\r\n::ng-deep .mat-card-header-text {\r\n  margin: 0 16px 0 0 !important;\r\n}\r\n\r\n.description-tile {\r\n  overflow: visible !important;\r\n}\r\n\r\n.full-width {\r\n  width: 100%;\r\n  margin: 0 20px;\r\n\r\n  textarea {\r\n    min-height: 120px;\r\n  }\r\n}\r\n\r\n.full-width-footer {\r\n  justify-content: right !important;\r\n\r\n  button {\r\n    margin: 0 5px 10px;\r\n  }\r\n}\r\n\r\n.full-width-footer {\r\n  ::ng-deep .mat-figure {\r\n    justify-content: flex-end !important;\r\n    margin: 0 20px !important;\r\n\r\n    button {\r\n      margin: 0 5px 10px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./patient-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "f": {
                    "name": "f",
                    "getSignature": {
                        "name": "f",
                        "type": "",
                        "returnType": "",
                        "line": 77
                    }
                }
            },
            "templateData": "<mat-card>\n  <mat-card-header>\n    <mat-card-title><mat-icon>account_circle</mat-icon>{{createUpdate}} Patient</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n      <div fxLayout=\"row\" class=\"patient-form-row\">\n        <mat-form-field appearance=\"outline\" class=\"full-width\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" fxLayoutGap=\"16px grid\">\n          <mat-label>Name</mat-label>\n          <input formControlName=\"name\" matInput placeholder=\"Patient Name\">\n          <mat-hint>Name of patient.</mat-hint>\n        </mat-form-field>\n      </div>\n      <div fxLayout=\"row\" class=\"patient-form-row\">\n          <mat-form-field appearance=\"outline\" class=\"full-width\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" fxLayoutGap=\"16px grid\">\n            <mat-label>Street</mat-label>\n            <input formControlName=\"street\" matInput placeholder=\"Patient street address\">\n          </mat-form-field>\n      </div>\n      <div fxLayout=\"row wrap\" class=\"patient-form-row\">\n          <mat-form-field appearance=\"outline\" class=\"full-width group\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" fxLayoutGap=\"16px grid\">\n            <mat-label>City</mat-label>\n            <input formControlName=\"city\" matInput placeholder=\"Patient city address\">\n            <mat-hint>Patient city address.</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" class=\"full-width group\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" fxLayoutGap=\"16px grid\">\n            <mat-label>State</mat-label>\n            <input formControlName=\"state\" matInput placeholder=\"Patient state address\">\n            <mat-hint>Patient state address.</mat-hint>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\" class=\"full-width group\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" fxLayoutGap=\"16px grid\">\n            <mat-label>Zip</mat-label>\n            <input formControlName=\"zipCode\" matInput placeholder=\"Patient zip\">\n            <mat-hint>Patient zip code.</mat-hint>\n          </mat-form-field>\n      </div>\n      <div fxLayout=\"row\" class=\"patient-form-row\">\n          <mat-form-field appearance=\"outline\" class=\"full-width\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxFlex.sm=\"33%\" fxLayoutGap=\"16px grid\">\n            <mat-label>Clinic</mat-label>\n            <input formControlName=\"clinic\" matInput placeholder=\"Patient clinic\">\n          </mat-form-field>\n      </div>\n      <div fxLayout=\"row\" class=\"patient-form-row\">\n          <mat-form-field appearance=\"outline\" class=\"full-width\" fxFlex=\"100%\" fxLayoutGap=\"16px grid\">\n            <mat-label>Description</mat-label>\n            <textarea formControlName=\"description\" matInput placeholder=\"Description for patient.\"></textarea>\n          </mat-form-field>\n      </div>\n      <div fxLayout=\"row\" class=\"full-width-footer\">\n          <button mat-raised-button type=\"submit\" [disabled]=\"registerForm.invalid\" color=\"primary\"\n            class=\"footer-button\">{{createUpdate}}</button>\n          <button mat-raised-button type=\"reset\" (click)=\"onCancel()\" color=\"warn\" class=\"footer-button\">Cancel</button>\n      </div>\n    </form>\n  </mat-card-content>\n</mat-card>\n"
        },
        {
            "name": "PatientListComponent",
            "id": "component-PatientListComponent-e50f5eb40f18814d2cd9c12fe49d779e235455509b60159ce791f358217ae467be3fe575c87700cac6be08ca837323ef2ca7c501af97f48453de252ed463dcbc",
            "file": "src/app/views/patient-list/patient-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-patient-list",
            "styleUrls": [
                "./patient-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./patient-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "patientList",
                    "defaultValue": "this.store.pipe(select(patientSelectors.selectPatients))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { PatientProfile } from '../../core/types/patient';\nimport * as patientSelectors from '../../core/store/patient/patient.selectors';\n\n@Component({\n  selector: 'app-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.scss']\n})\nexport class PatientListComponent implements OnInit {\n  public patientList = this.store.pipe(select(patientSelectors.selectPatients));\n\n  constructor(\n    private store: Store<PatientProfile>\n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n  padding: 16px;\r\n}\r\n",
                    "styleUrl": "./patient-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<PatientProfile>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<PatientProfile>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-card>\n  <mat-card-content>\n    <div class=\"container\">\n      <div class=\"patient-list\" fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n        <div fxFlex=\"25\" fxFlex.xs=\"100\" fxFlex.sm=\"50\" *ngFor=\"let patient of patientList | async\">\n          <app-patient-card [patientProfile]=\"patient\" [isFullProfile]=\"false\"></app-patient-card>\n        </div>\n      </div>\n    </div>\n  </mat-card-content>\n</mat-card>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-61600bf0ace3a6b00f02a15dfba65d63efe126f9f78c7a456f6424fb1ef243315e14a65bfd29ae37aa12624133387a4369b017a8ec75b9156ad9fcedc9ce44c4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { CoreModule } from './core/core.module';\nimport { FeaturesModule } from './features/features.module';\nimport { SharedModule } from './shared/shared.module';\nimport { ViewsModule } from './views/views.module';\nimport { MaterialsModule } from './core/materials/materials.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { metaReducers, reducers } from './core/store/reducers';\nimport { patientStateFeatureKey } from './core/store/patient';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CoreModule,\n    FeaturesModule,\n    SharedModule,\n    ViewsModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MaterialsModule,\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true\n      }\n    }),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    EffectsModule.forRoot([]),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "FeaturesModule"
                        },
                        {
                            "name": "MaterialsModule"
                        },
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "ViewsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-0e0c26a072dc769b8eb53fba3201b4c4a958f66356dcef50e11edf7ebc325fd7f1ff8d1b94db5a1bf3ffed13b19a6bf7f159f72a6cc1548fc4b6e0fe0176fe9f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PatientListComponent } from './views/patient-list/patient-list.component';\nimport { PatientListResolver } from './views/patient-list/patient-list.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PatientListComponent,\n    resolve: {\n      patients: PatientListResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-160390253c913ffda96d72a047ad3298e072690c79e858e90db8d0b1a9908e82774502919bf51ec4cdb7d0d5f7492727202c56e0c1b6aafda19b8ecd73c1c70b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/core.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PatientCardComponent } from './components/patient-card/patient-card.component';\nimport { MaterialsModule } from './materials/materials.module';\nimport { PatientFormComponent } from './components/forms/patient-form/patient-form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    PatientCardComponent,\n    PatientFormComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    PatientCardComponent\n  ]\n})\nexport class CoreModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PatientCardComponent"
                        },
                        {
                            "name": "PatientFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PatientCardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FeaturesModule",
            "id": "module-FeaturesModule-ecb11b82a2cc9ba4b76f38c206ae151514ffce3f537da4943d8bcf511f9b6130aa087edf8921614bfa3ffc10b301194993045cb394854694029b39dfef3b66db",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/features/features.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class FeaturesModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialsModule",
            "id": "module-MaterialsModule-365fd0a437a576616d310e02c2cf8500c94aa7fae3c397814cb57993c2328a2573b1d96c88cf327a2f83eadbad701dd0596bd93064015d1267093d724b6d7939",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/materials/materials.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    // MatTableDataSource,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-ee349b42cb4b8aeaaf82e8a45f0b73b70faf92b2a87b49964d2f7b38b905d18322d91b1b06ea19aef2a32fbcae13c1ffc693119b105ab2ab4b21ac75397df9ad",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { MaterialsModule } from '../core/materials/materials.module';\n\n@NgModule({\n  declarations: [\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialsModule\n  ],\n  exports: [\n    HeaderComponent\n  ]\n})\nexport class SharedModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ViewsModule",
            "id": "module-ViewsModule-5ba3b65b9e6c43da958ac7425a839e9581f0823c788007be065310236a20298e4703860295ea6df7b8789df43d0b439194066a2c778300f9a54265d68478e0a9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/views/views.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PatientListComponent } from './patient-list/patient-list.component';\nimport { MaterialsModule } from '../core/materials/materials.module';\nimport { CoreModule } from '../core/core.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { StoreModule } from '@ngrx/store';\nimport { PatientEffects } from '../core/store/patient/patient.effects';\nimport { EffectsModule } from '@ngrx/effects';\nimport * as fromPatientState from '../core/store/patient/index';\n\n@NgModule({\n  declarations: [\n    PatientListComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialsModule,\n    CoreModule,\n    FlexLayoutModule,\n    StoreModule.forFeature(\n      fromPatientState.patientStateFeatureKey,\n      fromPatientState.reducers,\n      { metaReducers: fromPatientState.metaReducers }\n    ),\n    EffectsModule.forFeature([PatientEffects]),\n  ]\n})\nexport class ViewsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PatientListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "MaterialsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "controlsConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  id: 1,\r\n  name: 'John Doe',\r\n  street: '32568 Willets Street',\r\n  city: 'Santa Barbara',\r\n  state: 'CA',\r\n  zipCode: '94687',\r\n  clinic: 'Health Clinic of America',\r\n  description:\r\n    'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante.',\r\n}"
            },
            {
                "name": "createPatient",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.CREATE_PATIENT,\r\n  props<{ patient: PatientProfile }>()\r\n)"
            },
            {
                "name": "createPatientFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.CREATE_PATIENT_FAILURE,\r\n  props<{ error: any }>()\r\n)"
            },
            {
                "name": "createPatientSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.CREATE_PATIENT_SUCCESS,\r\n  props<{ patients: PatientProfile[] }>()\r\n)"
            },
            {
                "name": "deletePatient",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.DELETE_PATIENT,\r\n  props<{ id: number }>()\r\n)"
            },
            {
                "name": "deletePatientFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.DELETE_PATIENT_FAILURE,\r\n  props<{ error: any }>()\r\n)"
            },
            {
                "name": "deletePatientSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.DELETE_PATIENT_SUCCESS,\r\n  props<{ patients: PatientProfile[] }>()\r\n)"
            },
            {
                "name": "EditProfile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "FullProfile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/patient-card/patient-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PatientState",
                "defaultValue": "{\r\n  patients: [],\r\n  patient: {\r\n    id: null,\r\n    name: '',\r\n    street: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    clinic: '',\r\n    description: '',\r\n  },\r\n  error: undefined\r\n}"
            },
            {
                "name": "loadPatient",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.LOAD_PATIENT,\r\n  props<{ id: number }>()\r\n)"
            },
            {
                "name": "loadPatientFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.LOAD_PATIENT_FAILURE,\r\n  props<{ error: any }>()\r\n)"
            },
            {
                "name": "loadPatients",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.LOAD_PATIENTS\r\n)"
            },
            {
                "name": "loadPatientsFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.LOAD_PATIENTS_FAILURE,\r\n  props<{ error: any }>()\r\n)"
            },
            {
                "name": "loadPatientsSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.LOAD_PATIENTS_SUCCESS,\r\n  props<{ patients: PatientProfile[] }>()\r\n)"
            },
            {
                "name": "loadPatientSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.LOAD_PATIENT_SUCCESS,\r\n  props<{ patient: PatientProfile }>()\r\n)"
            },
            {
                "name": "metaReducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MetaReducer[]",
                "defaultValue": "!environment.production ? [] : []"
            },
            {
                "name": "metaReducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/reducers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "MetaReducer[]",
                "defaultValue": "!environment.production\r\n    ? []\r\n    : []"
            },
            {
                "name": "NewProfile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "patientProfile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/patient-card/patient-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  id: 1,\r\n  name: 'John Doe',\r\n  street: '32568 Willets Street',\r\n  city: 'Santa Barbara',\r\n  state: 'CA',\r\n  zipCode: 94687,\r\n  clinic: 'Health Clinic of America',\r\n  description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante.'\r\n}"
            },
            {
                "name": "patientProfile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PatientProfile",
                "defaultValue": "{\r\n  id: null,\r\n  name: '',\r\n  street: '',\r\n  city: '',\r\n  state: '',\r\n  zipCode: '',\r\n  clinic: '',\r\n  description: '',\r\n}"
            },
            {
                "name": "patientStateFeatureKey",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'patientState'"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/header/header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "reducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  // on(fromPatientActions.loadPatients, (state: PatientState, action) => {\r\n  //   console.log('reducers loadPatients action: ', action);\r\n  //   console.log('reducers loadPatients state: ', state);\r\n  //   return {\r\n  //     ...state,\r\n  //     //patients: action.patients\r\n  //   }\r\n  // }),\r\n  on(fromPatientActions.loadPatientSuccess, (state: PatientState, action) => {\r\n    console.log('loadPatientSuccess state: ', state);\r\n    console.log('loadPatientSuccess action: ', action);\r\n    return {\r\n      ...state,\r\n      patient: action.patient\r\n    }\r\n  }),\r\n  on(fromPatientActions.loadPatientsSuccess, (state: PatientState, action) => {\r\n    console.log('loadPatientsSuccess state: ', state);\r\n    console.log('loadPatientsSuccess action: ', action);\r\n    return {\r\n      ...state,\r\n      patients: action.patients\r\n    }\r\n  }),\r\n  on(fromPatientActions.loadPatientsFailure, (state, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    }\r\n  }),\r\n  on(fromPatientActions.createPatientSuccess, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      patients: action.patients\r\n    }\r\n  }),\r\n  on(fromPatientActions.createPatientFailure, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    }\r\n  }),\r\n  on(fromPatientActions.updatePatientSuccess, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      patients: action.patients\r\n    }\r\n  }),\r\n  on(fromPatientActions.updatePatientFailure, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    }\r\n  }),\r\n  on(fromPatientActions.deletePatientSuccess, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      patients: action.patients\r\n    }\r\n  }),\r\n  on(fromPatientActions.deletePatientFailure, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    }\r\n  })\r\n)"
            },
            {
                "name": "reducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/reducers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<AppState>",
                "defaultValue": "{}"
            },
            {
                "name": "registerForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  ...controlsConfig,\r\n}"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "routerMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/header/header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  events: () => {},\r\n  navigate: () => {},\r\n}"
            },
            {
                "name": "selectPatient",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectPatientFeature,\r\n  (state: PatientState) => state.patient\r\n)"
            },
            {
                "name": "selectPatientFeature",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<PatientState>(\r\n  patientStateFeatureKey\r\n)"
            },
            {
                "name": "selectPatients",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectPatientFeature,\r\n  (state: PatientState) => state.patients\r\n)"
            },
            {
                "name": "SummaryProfile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/patient-card/patient-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/header/header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/patient-card/patient-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "updatePatient",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.UPDATE_PATIENT,\r\n  props<{ patient: PatientProfile }>()\r\n)"
            },
            {
                "name": "updatePatientFailure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.UPDATE_PATIENT_FAILURE,\r\n  props<{ error: any }>()\r\n)"
            },
            {
                "name": "updatePatientSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/store/patient/patient.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n  PatientActionTypes.UPDATE_PATIENT_SUCCESS,\r\n  props<{ patients: PatientProfile[] }>()\r\n)"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "PatientActionTypes",
                "childs": [
                    {
                        "name": "LOAD_PATIENTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient List Component] Load Patients"
                    },
                    {
                        "name": "LOAD_PATIENTS_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Effect] Load Patients Success"
                    },
                    {
                        "name": "LOAD_PATIENTS_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Effect] Load Patients Failure"
                    },
                    {
                        "name": "LOAD_PATIENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient List Component] Load Patient"
                    },
                    {
                        "name": "LOAD_PATIENT_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Effect] Load Patient Success"
                    },
                    {
                        "name": "LOAD_PATIENT_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Effect] Load Patient Failure"
                    },
                    {
                        "name": "CREATE_PATIENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Create] Create Patient"
                    },
                    {
                        "name": "CREATE_PATIENT_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Create Success] Create Patient Success"
                    },
                    {
                        "name": "CREATE_PATIENT_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Create Failure] Create Patient Failure"
                    },
                    {
                        "name": "UPDATE_PATIENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Update] Update Patient"
                    },
                    {
                        "name": "UPDATE_PATIENT_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Update Success] Update Patient Success"
                    },
                    {
                        "name": "UPDATE_PATIENT_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Update Failure] Update Patient Failure"
                    },
                    {
                        "name": "DELETE_PATIENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Delete] Delete Patient"
                    },
                    {
                        "name": "DELETE_PATIENT_SUCCESS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Delete Success] Delete Patient Success"
                    },
                    {
                        "name": "DELETE_PATIENT_FAILURE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "[Patient Delete Failure] Delete Patient Failure"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/core/store/patient/patient.actions.ts"
            }
        ],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/core/components/forms/patient-form/patient-form.component.stories.ts": [
                {
                    "name": "controlsConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  id: 1,\r\n  name: 'John Doe',\r\n  street: '32568 Willets Street',\r\n  city: 'Santa Barbara',\r\n  state: 'CA',\r\n  zipCode: '94687',\r\n  clinic: 'Health Clinic of America',\r\n  description:\r\n    'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante.',\r\n}"
                },
                {
                    "name": "EditProfile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NewProfile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "patientProfile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PatientProfile",
                    "defaultValue": "{\r\n  id: null,\r\n  name: '',\r\n  street: '',\r\n  city: '',\r\n  state: '',\r\n  zipCode: '',\r\n  clinic: '',\r\n  description: '',\r\n}"
                },
                {
                    "name": "registerForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  ...controlsConfig,\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/core/store/patient/patient.actions.ts": [
                {
                    "name": "createPatient",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.CREATE_PATIENT,\r\n  props<{ patient: PatientProfile }>()\r\n)"
                },
                {
                    "name": "createPatientFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.CREATE_PATIENT_FAILURE,\r\n  props<{ error: any }>()\r\n)"
                },
                {
                    "name": "createPatientSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.CREATE_PATIENT_SUCCESS,\r\n  props<{ patients: PatientProfile[] }>()\r\n)"
                },
                {
                    "name": "deletePatient",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.DELETE_PATIENT,\r\n  props<{ id: number }>()\r\n)"
                },
                {
                    "name": "deletePatientFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.DELETE_PATIENT_FAILURE,\r\n  props<{ error: any }>()\r\n)"
                },
                {
                    "name": "deletePatientSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.DELETE_PATIENT_SUCCESS,\r\n  props<{ patients: PatientProfile[] }>()\r\n)"
                },
                {
                    "name": "loadPatient",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.LOAD_PATIENT,\r\n  props<{ id: number }>()\r\n)"
                },
                {
                    "name": "loadPatientFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.LOAD_PATIENT_FAILURE,\r\n  props<{ error: any }>()\r\n)"
                },
                {
                    "name": "loadPatients",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.LOAD_PATIENTS\r\n)"
                },
                {
                    "name": "loadPatientsFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.LOAD_PATIENTS_FAILURE,\r\n  props<{ error: any }>()\r\n)"
                },
                {
                    "name": "loadPatientsSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.LOAD_PATIENTS_SUCCESS,\r\n  props<{ patients: PatientProfile[] }>()\r\n)"
                },
                {
                    "name": "loadPatientSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.LOAD_PATIENT_SUCCESS,\r\n  props<{ patient: PatientProfile }>()\r\n)"
                },
                {
                    "name": "updatePatient",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.UPDATE_PATIENT,\r\n  props<{ patient: PatientProfile }>()\r\n)"
                },
                {
                    "name": "updatePatientFailure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.UPDATE_PATIENT_FAILURE,\r\n  props<{ error: any }>()\r\n)"
                },
                {
                    "name": "updatePatientSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n  PatientActionTypes.UPDATE_PATIENT_SUCCESS,\r\n  props<{ patients: PatientProfile[] }>()\r\n)"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/core/components/patient-card/patient-card.component.stories.ts": [
                {
                    "name": "FullProfile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/patient-card/patient-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "patientProfile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/patient-card/patient-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  id: 1,\r\n  name: 'John Doe',\r\n  street: '32568 Willets Street',\r\n  city: 'Santa Barbara',\r\n  state: 'CA',\r\n  zipCode: 94687,\r\n  clinic: 'Health Clinic of America',\r\n  description: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante.'\r\n}"
                },
                {
                    "name": "SummaryProfile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/patient-card/patient-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/components/patient-card/patient-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/core/store/patient/index.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PatientState",
                    "defaultValue": "{\r\n  patients: [],\r\n  patient: {\r\n    id: null,\r\n    name: '',\r\n    street: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    clinic: '',\r\n    description: '',\r\n  },\r\n  error: undefined\r\n}"
                },
                {
                    "name": "metaReducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaReducer[]",
                    "defaultValue": "!environment.production ? [] : []"
                },
                {
                    "name": "patientStateFeatureKey",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'patientState'"
                },
                {
                    "name": "reducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  // on(fromPatientActions.loadPatients, (state: PatientState, action) => {\r\n  //   console.log('reducers loadPatients action: ', action);\r\n  //   console.log('reducers loadPatients state: ', state);\r\n  //   return {\r\n  //     ...state,\r\n  //     //patients: action.patients\r\n  //   }\r\n  // }),\r\n  on(fromPatientActions.loadPatientSuccess, (state: PatientState, action) => {\r\n    console.log('loadPatientSuccess state: ', state);\r\n    console.log('loadPatientSuccess action: ', action);\r\n    return {\r\n      ...state,\r\n      patient: action.patient\r\n    }\r\n  }),\r\n  on(fromPatientActions.loadPatientsSuccess, (state: PatientState, action) => {\r\n    console.log('loadPatientsSuccess state: ', state);\r\n    console.log('loadPatientsSuccess action: ', action);\r\n    return {\r\n      ...state,\r\n      patients: action.patients\r\n    }\r\n  }),\r\n  on(fromPatientActions.loadPatientsFailure, (state, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    }\r\n  }),\r\n  on(fromPatientActions.createPatientSuccess, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      patients: action.patients\r\n    }\r\n  }),\r\n  on(fromPatientActions.createPatientFailure, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    }\r\n  }),\r\n  on(fromPatientActions.updatePatientSuccess, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      patients: action.patients\r\n    }\r\n  }),\r\n  on(fromPatientActions.updatePatientFailure, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    }\r\n  }),\r\n  on(fromPatientActions.deletePatientSuccess, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      patients: action.patients\r\n    }\r\n  }),\r\n  on(fromPatientActions.deletePatientFailure, (state: PatientState, action) => {\r\n    return {\r\n      ...state,\r\n      error: action.error\r\n    }\r\n  })\r\n)"
                }
            ],
            "src/app/core/store/reducers/index.ts": [
                {
                    "name": "metaReducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/reducers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaReducer[]",
                    "defaultValue": "!environment.production\r\n    ? []\r\n    : []"
                },
                {
                    "name": "reducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/reducers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<AppState>",
                    "defaultValue": "{}"
                }
            ],
            "src/app/shared/header/header.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/header/header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "routerMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/header/header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  events: () => {},\r\n  navigate: () => {},\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/header/header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/core/store/patient/patient.selectors.ts": [
                {
                    "name": "selectPatient",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectPatientFeature,\r\n  (state: PatientState) => state.patient\r\n)"
                },
                {
                    "name": "selectPatientFeature",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<PatientState>(\r\n  patientStateFeatureKey\r\n)"
                },
                {
                    "name": "selectPatients",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/store/patient/patient.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectPatientFeature,\r\n  (state: PatientState) => state.patients\r\n)"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/core/store/patient/patient.actions.ts": [
                {
                    "name": "PatientActionTypes",
                    "childs": [
                        {
                            "name": "LOAD_PATIENTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient List Component] Load Patients"
                        },
                        {
                            "name": "LOAD_PATIENTS_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Effect] Load Patients Success"
                        },
                        {
                            "name": "LOAD_PATIENTS_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Effect] Load Patients Failure"
                        },
                        {
                            "name": "LOAD_PATIENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient List Component] Load Patient"
                        },
                        {
                            "name": "LOAD_PATIENT_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Effect] Load Patient Success"
                        },
                        {
                            "name": "LOAD_PATIENT_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Effect] Load Patient Failure"
                        },
                        {
                            "name": "CREATE_PATIENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Create] Create Patient"
                        },
                        {
                            "name": "CREATE_PATIENT_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Create Success] Create Patient Success"
                        },
                        {
                            "name": "CREATE_PATIENT_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Create Failure] Create Patient Failure"
                        },
                        {
                            "name": "UPDATE_PATIENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Update] Update Patient"
                        },
                        {
                            "name": "UPDATE_PATIENT_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Update Success] Update Patient Success"
                        },
                        {
                            "name": "UPDATE_PATIENT_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Update Failure] Update Patient Failure"
                        },
                        {
                            "name": "DELETE_PATIENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Delete] Delete Patient"
                        },
                        {
                            "name": "DELETE_PATIENT_SUCCESS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Delete Success] Delete Patient Success"
                        },
                        {
                            "name": "DELETE_PATIENT_FAILURE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "[Patient Delete Failure] Delete Patient Failure"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/core/store/patient/patient.actions.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "component": "PatientListComponent",
                        "resolve": {
                            "patients": "PatientListResolver"
                        }
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "controlsConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EditProfile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NewProfile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "patientProfile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "registerForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/forms/patient-form/patient-form.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/forms/patient-form/patient-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PatientFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/patient-card/patient-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FullProfile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/patient-card/patient-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "patientProfile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/patient-card/patient-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SummaryProfile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/patient-card/patient-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/patient-card/patient-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PatientCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/patient.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PatientService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StoreService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PatientState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "metaReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "patientStateFeatureKey",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createPatient",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createPatientFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "createPatientSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deletePatient",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deletePatientFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "deletePatientSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadPatient",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadPatientFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadPatients",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadPatientsFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadPatientsSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loadPatientSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updatePatient",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updatePatientFailure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "updatePatientSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PatientEffects",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectPatient",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectPatientFeature",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/patient/patient.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectPatients",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/reducers/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "metaReducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/store/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/types/patient.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PatientProfile",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/header/header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/header/header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routerMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/header/header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/patient-list/patient-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PatientListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/views/patient-list/patient-list.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "PatientListResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}